<axis-node-views xmlns="declera:xmlite">
	<class>
		<view-template>
			drop view if exists doc_node_<suffix/>;
			create view doc_node_<suffix/> as
				select
					base.doc_node base,

					axis.doc, axis.doc_node, axis.doc_type,

					axis.doc_ix,
					axis.doc_level,

					axis.prototype

					from doc_node base
						inner join doc_node axis
							on axis.doc = base.doc
							<axis-relation-sql/>
			;
		</view-template>
		<axis name="ancestor">
			<description>Indicates all the ancestors of the context node beginning with the parent node and traveling through to the root node</description>
			<view suffix="ancestor">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_ix in (select max(doc_ix) from doc_node where doc = base.doc and doc_ix < base.doc_ix) group by doc_level)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="ancestor-or-self">
			<description>Indicates the context node and all of its ancestors, including the root node</description>
			<view suffix="ancestor_or_self">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_ix in (select max(doc_ix) from doc_node where doc = base.doc and doc_ix <= base.doc_ix) group by doc_level)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="child">
			<description>Indicates the children of the context node. If an XPath expression does not specify an axis, is understood by default. Since only the root node or element nodes have children, any other use will select nothing</description>
			<view suffix="child">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_level = base.doc_level + 1
							and axis.doc_ix
								between base.doc_ix
									and coalesce(
										(select min(doc_ix) from doc_node where doc = base.doc and doc_level = base.doc_level and doc_ix > base.doc_ix),
										(select max(doc_ix) from doc_node where doc = base.doc)
										)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="descendant">
			<description>Indicates all of the children of the context node, and all of their children, and so forth. Attribute and namespace nodes are not included - the parent of an attribute node is an element node, but attribute nodes are not the children of their parents</description>
			<view suffix="descendant">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis_node.doc_ix
								between base.doc_ix + 1
									and coalesce(
										(select min(doc_ix) from doc_node where doc = base.doc and doc_level = base.doc_level and doc_ix > base.doc_ix),
										(select max(doc_ix) from doc_node where doc = base.doc)
										)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="descendant-or-self">
			<description>Indicates the context node and all of its descendants. Attribute and namespace nodes are not included - the parent of an attribute node is an element node, but attribute nodes are not the children of their parents</description>
			<view suffix="descendant_or_self">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis_node.doc_ix
								between base.doc_ix
									and coalesce(
										(select min(doc_ix) from doc_node where doc = base.doc and doc_level = base.doc_level and doc_ix > base.doc_ix),
										(select max(doc_ix) from doc_node where doc = base.doc)
										)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="following">
			<description>Indicates all the nodes that appear after the context node, except any descendant, attribute, and namespace nodes</description>
			<view suffix="following">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_ix > base.doc_ix
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="following-sibling">
			<description>Indicates all the nodes that have the same parent as the context node and appear after the context node in the source document</description>
			<view suffix="following_sibling">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_level = base.doc_level
							and axis.doc_ix
								between base.doc_ix + 1
									and coalesce(
										(select min(doc_ix) from doc_node where doc = base.doc and doc_level = base.doc_level - 1 and doc_ix > base.doc_ix),
										(select max(doc_ix) from doc_node where doc = base.doc)
										)
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="parent" abbreviation="..">
			<description>Indicates the single node that is the parent of the context node. It can be abbreviated as two periods (..)</description>
			<view suffix="parent">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_ix = (select max(doc_ix) from doc_node where doc = base.doc and doc_level = base.doc_level - 1 and doc_ix < base.doc_ix),
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="preceding">
			<description>Indicates all the nodes that precede the context node in the document except any ancestor, attribute and namespace nodes</description>
			<view suffix="preceding">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_ix < base.doc_ix
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
		<axis name="preceding-sibling">
			<description>Indicates all the nodes that have the same parent as the context node and appear before the context node in the source document</description>
			<view suffix="preceding_sibling">
				<axis-node-join>
					<axis-relation>
						<sql><![CDATA[
							axis.doc_level = base.doc_level
							and axis.doc_ix
								between (select max(doc_ix) + 1 from doc_node where doc = base.doc and doc_level = base.doc_level - 1 and doc_ix < base.doc_ix),
									and base.doc_ix
						]]></sql>
					</axis-relation>
				</axis-node-join>
			</view>
		</axis>
	</class>
	<class>
		<view-template>
			drop view if exists doc_node_<suffix/>;
			create view doc_node_<suffix/> as
				select
					doc_node base,

					doc, doc_node, doc_type,

					doc_ix,
					doc_level,

					prototype

					from doc_node base
			;
		</view-template>
		<axis name="self" abbreviation=".">
			<description>Indicates the context node itself. It can be abbreviated as a single period (.).</description>
			<view suffix="self"/>
		</axis>
	</class>
</axis-node-views>